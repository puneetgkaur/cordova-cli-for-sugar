1<!DOCTYPE html>
<html>

<head>
<meta charset="utf-8" />
	<title>Accelerometer</title>
<link rel="stylesheet" media="not screen and (device-width: 1200px) and (device-height: 900px)"
      href="lib/sugar-web/graphics/css/sugar-96dpi.css">
<link rel="stylesheet" media="screen and (device-width: 1200px) and (device-height: 900px)"
      href="lib/sugar-web/graphics/css/sugar-200dpi.css">
<link rel="stylesheet" href="css/activity.css">

<script data-main="js/loader" src="lib/require.js"></script>
<!--need to include activity.js before cordova.js as activity.js loads the DOM and sets up the activity without which we recieve DOM error-->
<script src="js/activity.js"></script>
<script src="lib/cordova.js"></script>
<script src="lib/test.js"></script>
  <script type="text/javascript" charset="utf-8">
    // Wait for device API libraries to load
    //

/*
require(['cordova/accelerometer'],
    function (data) {
        //The data object will be the API response for the
        //JSONP data call.
        console.log(data);
    }
);
*/

    document.addEventListener("deviceready", onDeviceReady, false);



    // device APIs are available
    //
    function onDeviceReady() {
        console.log("index.html : onDeviceReady1");
        navigator.accelerometer.getCurrentAcceleration(onSuccess, onError);
	console.log("index.html : onDeviceReady2");
    }

    // onSuccess: Get a snapshot of the current acceleration
    //
    function onSuccess(acceleration) {
	console.log("reached on success");
        console.log("onSuccess acceleration "+JSON.stringify(acceleration));
	
        alert('Acceleration X: ' + acceleration.x + '\n' +
              'Acceleration Y: ' + acceleration.y + '\n' +
              'Acceleration Z: ' + acceleration.z + '\n' +
              'Timestamp: '      + acceleration.timestamp + '\n');
    }

    // onError: Failed to get the acceleration
    //
    function onError() {
        alert('onError!');
    }

    </script>
</head>

<body>
<div id="main-toolbar" class="toolbar">
  <button class="toolbutton" id="activity-button" title="My Activity"></button>

  <!-- Add more buttons here -->

  <!-- Buttons with class="pull-right" will be right aligned -->
  <button class="toolbutton pull-right" id="stop-button" title="Stop"></button>
</div>

<!-- The content of your activity goes inside the canvas -->
<div id="canvas">

  <!-- Replace this message with your own content -->
<!--
    	<div id="accelerometer">Waiting for accelerometer...</div>
        <button onclick="stopWatch();">Stop Watching</button>
-->
       <h1>Example</h1>
    <p>getCurrentAcceleration</p>
</div>
</body>

</html>
